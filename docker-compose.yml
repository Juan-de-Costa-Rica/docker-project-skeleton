version: '3.5'

networks:
    app-network:
        name: ${APP_NAME}-network

services:

    app:
        container_name: ${APP_NAME}-app
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./src:/app
        ports:
            - "9000:9000"
        networks:
            - app-network

    database:
        image: mysql:5.7.29
        container_name: ${APP_NAME}-mysql
        restart: unless-stopped
        tty: true
        user: 1000:1000
        ports:
            - "3306:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            MYSQL_DATABASE: DB_DATABASE
            MYSQL_USER: DB_USERNAME
            MYSQL_PASSWORD: DB_PASSWORD
            MYSQL_ROOT_PASSWORD: DB_PASSWORD
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - app-network

    redis:
        image: "redis:alpine"
        container_name: ${APP_NAME}-redis
        restart: unless-stopped
        user: 1000:1000
        ports:
            - "6379:6379"
        networks:
            - app-network
        volumes:
            - ./redis:/data
    
    composer:
        image: composer:latest
        container_name: ${APP_NAME}-composer
        volumes:
            - ./src:/app
        working_dir: /app
        user: 1000:1000
        depends_on:
            - app
        networks: 
            - app-network
        entrypoint: ['composer', '--ignore-platform-reqs']
        command: "install"
  
    webserver: 
        image: nginx:stable-alpine
        container_name: ${APP_NAME}-nginx
        ports:
            - "8088:80"
        volumes:
            - ./src:/app
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
            - database
            - redis
        env_file:
            - .env
        networks:
            - app-network





